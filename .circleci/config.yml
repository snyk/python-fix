version: 2.1
orbs:
  snyk: snyk/snyk@0.0.8

commands:
  checkout_and_install:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: npm install --no-package-lock
  lerna_bootstrap:
    steps:
      - run:
          name: lerna bootstrap
          command: ./node_modules/.bin/lerna bootstrap --no-ci --ignore-scripts
  run_lerna_tests:
    steps:
      - run:
          name: npm test
          command: npm run test:ci
  run_generic_test:
    parameters:
      package-name:
        type: string
    steps:
      - run:
          name: lerna run test --scope << parameters.package-name >> --stream
          command: ./node_modules/.bin/lerna run test --scope << parameters.package-name >> --stream
  run_test-pipenv-pipfile:
    parameters:
      python_version:
        type: string
      pipenv_version:
        type: string
    steps:
      - run:
          name: pyenv install << parameters.python_version >> && lerna run test --scope @snyk-fix/pipenv-pipfile --stream
          command: |
            apt -qq update
            apt -qq install python3-pip python-pip -y &> /dev/null
            curl https://pyenv.run | $SHELL
            export PATH="/root/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            pyenv -v
            export PYTHON_VERSION_LATEST=`pyenv install --list | grep -v 'Available versions' | awk '{$1=$1};1' | grep "^$PYTHON_VERSION\.[0-9]\+$" | tail -1`
            # Install the specific release of Python if it isn't already installed
            pyenv install -s $PYTHON_VERSION_LATEST
            # Required for a specific test
            pyenv install -s 3.8.1
            pyenv sh-shell $PYTHON_VERSION_LATEST
            python --version
            export LANG="en_US.UTF-8"
            export LC_CTYPE="en_US.UTF-8"
            export PATH=$HOME/.local/bin:$PATH
            python -m pip install --user pipenv===$PIPENV_VER
            export PATH="$PATH:$HOME/.local/bin"
            python -m pipenv --version
            # Run node tests
            ./node_modules/.bin/lerna run test --scope @snyk-fix/pipenv-pipfile --stream
          environment:
            PYTHON_VERSION: << parameters.python_version >>
            PIPENV_VER: << parameters.pipenv_version >>
jobs:
  build-test:
    docker:
      - image: circleci/node:14
    steps:
      - checkout_and_install
      - lerna_bootstrap
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run_lerna_tests
  release:
    docker:
      - image: circleci/node:14
    steps:
      - checkout_and_install
      - lerna_bootstrap
      - run:
          name: lerna publish --ignore-scripts --yes
          command: |
            git config --global user.email "lili@snyk.io"
            git config --global user.name "Lili Kastilio"
            ./node_modules/.bin/lerna publish --yes
  test_pipenv-pipfile:
    parameters:
      node_version:
        type: string
      python_version:
        type: string
      pipenv_version:
        type: string
    docker:
      - image: node:<< parameters.node_version >>
    steps:
      - checkout_and_install
      - lerna_bootstrap
      - run_test-pipenv-pipfile:
          python_version: << parameters.python_version >>
          pipenv_version: << parameters.pipenv_version >>
workflows:
  version: 2
  build-test:
    jobs:
      - build-test:
          context: SNYK
          filters:
            branches:
              ignore:
                - main
                - /pull\/[0-9]+/
      - test_pipenv-pipfile:
          name: Node.js << matrix.node_version >> | Python << matrix.python_version >> | pyenv << matrix.pipenv_version >>
          matrix:
            parameters:
              node_version: [ '10', '12', '14' ]
              pipenv_version: [ '2020.11.4', '2020.8.13', '2020.6.2', '2020.5.28', '2018.11.26' ]
              python_version: [ '3.9', '3.8', '3.7', '3.6', '2.7' ]
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /test_@snyk-fix\/pipenv-pipfile.*/
      - release:
          name: Release
          context: SNYK
          filters:
            branches:
              only:
                - main
